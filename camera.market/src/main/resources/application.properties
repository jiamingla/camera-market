spring.application.name=camera.market

# 原本 Cloud SQL (PostgreSQL) 的設定範例 (請註解或刪除)
# spring.datasource.url=jdbc:postgresql:///${DB_NAME}
# spring.datasource.username=${DB_USER}
# spring.datasource.password=${DB_PASS}
# spring.datasource.driver-class-name=org.postgresql.Driver
# spring.cloud.gcp.sql.instance-connection-name=${DB_INSTANCE_CONNECTION_NAME}
# spring.cloud.gcp.sql.database-name=${DB_NAME}
# spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# 新的 MySQL 設定
spring.datasource.url=jdbc:mysql://${MYSQL_HOST}:${MYSQL_PORT}/${MYSQL_DATABASE}?useSSL=${MYSQL_USE_SSL}&serverTimezone=UTC&allowPublicKeyRetrieval=true&useUnicode=true&characterEncoding=utf8&useLegacyDatetimeCode=false&autoReconnect=true&failOverReadOnly=false&maxReconnects=10&allowMultiQueries=true
spring.datasource.username=${MYSQL_USER}
spring.datasource.password=${MYSQL_PASSWORD}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver


# Hibernate 方言 (如果使用 JPA/Hibernate)
# 根據你的 Hibernate 版本選擇合適的方言
# 或者對於較新的 MySQL 版本 (如 MySQL 8+):
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

# VERY IMPORTANT: Change ddl-auto strategy!
# 'update': Hibernate tries to update the schema. OK for development, risky for production.
# 'validate': Hibernate validates the schema against entities. Fails if mismatch. Safer.
# 'none': Hibernate does nothing. Recommended for production with Flyway/Liquibase.
# Start with 'update' for initial setup, but plan to move to 'validate' or 'none'.
spring.jpa.hibernate.ddl-auto=update

# Disable H2 Console
spring.h2.console.enabled=false

# --- JWT Settings (Keep as is) ---
jwt.secret=your_long_and_random_secret_key_here_abcdefghijklmnopqrstuvwxyz123456
jwt.expiration=86400000

# --- Logging Settings (Keep as is or adjust) ---
logging.file.path = "filePath.log"
logging.level.org.springframework.security=DEBUG
logging.level.org.springframework.web.filter.CorsFilter=TRACE
logging.level.org.springframework.web=DEBUG
# TRACE 比 DEBUG 更詳細，可以看到 CorsFilter 的內部判斷
logging.level.org.springframework.web.servlet=DEBUG
# Renamed from servlet to filter for clarity# Renamed from servlet to filter for clarity
logging.level.org.springframework.web.filter=DEBUG
# Changed cors to TRACE for more detail if needed
logging.level.org.springframework.web.cors=TRACE
logging.level.org.springframework.security.web.csrf=DEBUG
logging.level.jiamingla.first.camera.market=DEBUG
# Optional: Log generated SQL
logging.level.org.hibernate.SQL=DEBUG
# Optional: Log SQL parameters
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

server.forward-headers-strategy=framework
# 或者，如果上面的不行，可以試試：
# server.forward-headers-strategy=native
# server.use-forward-headers=true # 這個在較新版本中通常由 strategy 控制，但加上也無妨

# 開啟或關閉Swagger UI
springdoc.swagger-ui.enabled=true

# Swagger UI的路徑
springdoc.swagger-ui.path=/swagger-ui.html

# API文檔的URL，默認為"/v3/api-docs"
springdoc.api-docs.path=/v3/api-docs

#“alpha”（按路徑字母數字排序）、“method”（按 HTTP 方法排序)
springdoc.swagger-ui.operations-sorter=alpha

# Expose 'health' and 'info' endpoints over the web (HTTP)
management.endpoints.web.exposure.include=health,info